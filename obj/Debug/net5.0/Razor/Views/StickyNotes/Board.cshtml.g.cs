#pragma checksum "C:\MVC\StickyNotes\Views\StickyNotes\Board.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c1b29167f6025bdf8dba80fe31b4495b2954a3fc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_StickyNotes_Board), @"mvc.1.0.view", @"/Views/StickyNotes/Board.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\MVC\StickyNotes\Views\_ViewImports.cshtml"
using StickyNotes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\MVC\StickyNotes\Views\_ViewImports.cshtml"
using StickyNotes.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c1b29167f6025bdf8dba80fe31b4495b2954a3fc", @"/Views/StickyNotes/Board.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e2d8762bff2d8e6bfc1d2fb555f8b31445e9194c", @"/Views/_ViewImports.cshtml")]
    public class Views_StickyNotes_Board : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<StickyNotes.Models.Notes>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<a href='/stickynotes/board'><button onclick='resetLocs()'>Reset</button></a>
<div id=""grid1"" class=""grid"" >
    <div id=""sticky0"" class=""box"" >idk jus seein what shows up and where it goes and if it wraps or idk is it jus gona mess up like usual or blah some more blah</div>
    <div id=""sticky1"" class=""box"" >bLH blah</div>
</div>
<tbale>
    <th>col1</th>
        <td>123</td>
    <th>col2</th>
        <td>456</td>
</tbale>


");
            WriteLiteral(@"

<script>
    var sPositions = localStorage.positions || ""{}"",
    positions = JSON.parse(sPositions);
    console.log(positions)
    $.each(positions, function (id, pos) {$(""#"" + id).css(pos)})

    for (let y = 0; y <= 12; y++) {
        $(""#sticky""+y).draggable({
");
            WriteLiteral(@"        containment: ""#containment-wrapper"",
        scroll: false,
        stop: function (event, ui) {positions[this.id] = ui.position 
        localStorage.positions = JSON.stringify(positions)}
    });
    }

    function resetLocs() {
        localStorage.positions = """";
    }
</script>
<style>
    html {
        left: 0;
    }
    .grid {
        width: 93em;
        margin-left: 33em;
        margin-top: -15em;
    }
    .box {
        position: relative;
        float: left;
        height: 14em;
        width: 14em;
        background-color: yellow;
        border: 2px solid black;
        margin:3em;
        margin-left: 5.6em;
        transform:rotate(-3deg);
    }
</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<StickyNotes.Models.Notes> Html { get; private set; }
    }
}
#pragma warning restore 1591
